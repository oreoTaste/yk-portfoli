/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-05-29 07:20:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.portfolio;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/bitcamp/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/portfoli/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1590550087014L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("<!--------------------------------------- nav bar ----------------------------------------------->\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../member/sidebar.jsp", out, false);
      out.write("<!--------------------------------------- nav bar ----------------------------------------------->\r\n");
      out.write("\r\n");
      out.write("<!-------------------------------------------- 컨텐츠부분 -------------------------------------------->\r\n");
      out.write("      <section style=\"padding: 50px 0px; width: 55%;\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-12 col-lg-12\">\r\n");
      out.write("        <h3 class=\"d-none d-lg-block m--3\" style=\"margin-bottom: 1.4rem!important;\">내 포트폴리오 등록</h3>\r\n");
      out.write("\r\n");
      out.write("               <form id=\"addForm\" action=\"add\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("                \r\n");
      out.write("          <span class=\"text-gray-900\">제목 : </span> \r\n");
      out.write("          <input required type=\"text\"  placeholder=\"제목을 적어주세요\"\r\n");
      out.write("                 class=\"form-label-group form-control-clean col-md-11 mt--5\"\r\n");
      out.write("                 name=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolio.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("          <br>\r\n");
      out.write("          <p class=\"text-gray-900 mt-3\" style=\"display: inline-block;\">기술 : </p>\r\n");
      out.write("          <select name=\"skills\" multiple class=\"bs-select form-label-group form-control-clean col-md-11 mt--5\" title=\"기술을 골라주세요\">\r\n");
      out.write("          \t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("          <p class=\"text-gray-900 mt-3\">내용 :</p>\r\n");
      out.write("\t\t\t\t\t<textarea class=\"summernote-editor\"\r\n");
      out.write("\t\t\t\t\t  name=\"content\" \r\n");
      out.write("\t\t\t\t\t  data-placeholder=\"내용을 적어주세요.\"\r\n");
      out.write("\t\t\t\t\t  data-min-height=\"300\" \r\n");
      out.write("\t\t\t\t\t  data-max-height=\"1000\" \r\n");
      out.write("\t\t\t\t\t  data-focus=\"true\" \r\n");
      out.write("\t\t\t\t\t  data-lang=\"en-US\"\r\n");
      out.write("\t\t\t\t\t  data-toolbar='[\r\n");
      out.write("\t\t\t\t\t      [\"style\", [\"style\"]],\r\n");
      out.write("\t\t\t\t\t      [\"font\", [\"bold\", \"italic\", \"underline\", \"clear\"]],\r\n");
      out.write("\t\t\t\t\t      [\"fontname\", [\"fontname\"]],\r\n");
      out.write("\t\t\t\t\t      [\"color\", [\"color\"]],\r\n");
      out.write("\t\t\t\t\t      [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n");
      out.write("\t\t\t\t\t      [\"height\", [\"height\"]],\r\n");
      out.write("\t\t\t\t\t      [\"table\", [\"table\"]],\r\n");
      out.write("\t\t\t\t\t      [\"insert\", [\"link\", \"hr\"]],\r\n");
      out.write("\t\t\t\t\t      [\"view\", [\"fullscreen\", \"codeview\"]],\r\n");
      out.write("\t\t\t\t\t      [\"help\", [\"help\"]]\r\n");
      out.write("\t\t\t\t\t    ]'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolio.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("          <span class=\"text-gray-900\">홈페이지 : </span>\r\n");
      out.write("          <textarea class=\"form-control\" placeholder=\"홈페이지를 적어주세요\" rows=\"1\" name='homepage' style='resize: none; width:100%;'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolio.homepage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("            \r\n");
      out.write("          <div class='photoDiv' style=\"min-height: 200px;\">\r\n");
      out.write("            <p class=\"text-gray-900 mt-3\" style=\"margin-bottom: 0px\">썸네일 :</p>\r\n");
      out.write("              <div class=\"form-control\" align=\"center\" >\r\n");
      out.write("                    <input type=\"file\" id=\"thumb\" name=\"thumb\" accept=\".gif, .jpg, .jpeg, .png\" class=\"files\"/><br>\r\n");
      out.write("              </div>\r\n");
      out.write("            \r\n");
      out.write("            ");
      out.write("<p class=\"text-gray-900 mt-3\" style=\"margin-bottom: 0px\">첨부파일 :</p>\r\n");
      out.write("              <div class=\"form-control\" align=\"center\" id=\"filePar\" style=\"height:auto;\">\r\n");
      out.write("              <input type=\"file\" name=\"files\" class=\"files\" onclick=\"plus(event)\"/><br>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("            <label\r\n");
      out.write("              class=\"form-switch form-switch-pill form-switch-primary d-block mt-3  ml-3\">\r\n");
      out.write("              <input type=\"checkbox\" id=\"readable\" name=\"readable\">\r\n");
      out.write("              <i data-on=\"OK\" data-off=\"NO\"></i> <span class=\"h6\">포트폴리오 공개 여부</span>\r\n");
      out.write("            </label>\r\n");
      out.write("\r\n");
      out.write("          <div align=\"right\" class=\"container-fluid\">\r\n");
      out.write("            <button id=\"register\" type=\"button\"\r\n");
      out.write("              class=\"btn btn-outline-secondary btn-pill btn-sm mt-3\">\r\n");
      out.write("              등록하기</button>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("                </form>\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- /FAQ -->\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("  <style>\r\n");
      out.write("    .dropdown.bootstrap-select.show-tick.bs-select.form-label-group.form-control-clean.col-md-11.mt--5 {\r\n");
      out.write("    \tpadding:0px;\r\n");
      out.write("    }\r\n");
      out.write("    .lightGray{width: 100%; border:2px lightGray solid;}\r\n");
      out.write("    .darkerGray{color:#313335;}\r\n");
      out.write("    .firstTR{border-bottom:1px darkGray dashed; padding:0px 5px;}\r\n");
      out.write("    .padding{padding:10px; border-right: 2px solid lightGray;}\r\n");
      out.write("    .smallPadding{padding:5px 5px; border-right: 2px solid lightGray;}\r\n");
      out.write("    .optPadding{height: 30px; padding: 0px 5px;}\r\n");
      out.write("    .pinkPadding{resize:none; border-color:pink; width: 75%; height: 100%}\r\n");
      out.write("    .photoTD{padding:10px; border-top:1px darkGray dashed; border-bottom:1px darkGray dashed; background: lightGray; height: 150px;}\r\n");
      out.write("    .photoInside{text-align: center}\r\n");
      out.write("    .buttonTD{text-align: center}\r\n");
      out.write("    .textAR{resize:none; border-color:pink}\r\n");
      out.write("  </style>\r\n");
      out.write("  \r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.getServletContext().getContextPath()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/node_modules/sweetalert2/dist/sweetalert2.all.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  \r\n");
      out.write("  $('#register').on('click', function() {\r\n");
      out.write("\t  // 공개설정인 경우 : 썸네일 값이 있는지 체크\r\n");
      out.write("\t  if($('#readable').val() == 1 ) {\r\n");
      out.write("\t\t  if($('#thumb').val() != null) {\r\n");
      out.write("\t\t\t  Swal.fire({\r\n");
      out.write("\t\t\t\t  icon: 'error',\r\n");
      out.write("\t\t\t\t  title: '잠깐!...',\r\n");
      out.write("\t\t\t\t  text: '썸네일을 넣어주세요.',\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  }\r\n");
      out.write("\t  // 비공개설정인 경우 : 조건없이 통과\r\n");
      out.write("\t  if($('#readable').val() == 0 || $('#readable').val() == 'on') {\r\n");
      out.write("\t  \t$('#addForm').submit();\r\n");
      out.write("\t  }\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  $('input[type=\"checkbox\"]').change(function(){\r\n");
      out.write("      this.value = (Number(this.checked));\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  var td = document.querySelector(\"#filePar\");\r\n");
      out.write("  \r\n");
      out.write("  td.addEventListener(\"click\", function(e) {\r\n");
      out.write("      var br = document.createElement(\"br\");\r\n");
      out.write("\r\n");
      out.write("      var newNode = document.createElement(\"input\");\r\n");
      out.write("      newNode.type=\"file\";\r\n");
      out.write("      newNode.name=\"files\";\r\n");
      out.write("      newNode.setAttribute(\"class\", \"files\");\r\n");
      out.write("      newNode.setAttribute(\"onclick\", \"plus(event)\");\r\n");
      out.write("      \r\n");
      out.write("      // input file 할때 확장자를 선택할 경우\r\n");
      out.write("      // newNode.setAttribute(\"accept\", \".gif, .jpg, .jpeg, .png\");\r\n");
      out.write("      \r\n");
      out.write("      document.querySelector(\"#filePar\");\r\n");
      out.write("      console.log(filePar);\r\n");
      out.write("      console.log(newNode);\r\n");
      out.write("      filePar.appendChild(newNode);\r\n");
      out.write("      filePar.appendChild(br);\r\n");
      out.write("      \r\n");
      out.write("      e.stopImmediatePropagation();\r\n");
      out.write("      \r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("    function plus(e) {\r\n");
      out.write("      e.stopImmediatePropagation();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function move(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        location.href = \"list\";\r\n");
      out.write("      }\r\n");
      out.write("  </script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/portfolio/form.jsp(30,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/portfolio/form.jsp(30,11) '${myskills}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${myskills}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/portfolio/form.jsp(30,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("item");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" data-subtext=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.fieldName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t          \t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
